! This file was generated by gpufort
          
           
module vector_dot_kernels
  use hipfort
  use hipfort_check
  implicit none

  

 
  interface

    subroutine launch_krnl_cecba2_8(grid,&
        block,&
        sharedMem,&
        stream) bind(c, name="launch_krnl_cecba2_8")
      use iso_c_binding
      use hipfort
      use hipfort_check
      implicit none
      type(dim3),intent(in) :: grid
      type(dim3),intent(in) :: block
      integer(c_int),intent(in) :: sharedMem
      type(c_ptr),value,intent(in) :: stream
    end subroutine

    subroutine launch_krnl_cecba2_8_auto(sharedMem,&
        stream) bind(c, name="launch_krnl_cecba2_8_auto")
      use iso_c_binding
      use hipfort
      use hipfort_check
      implicit none
      integer(c_int),value,intent(in) :: sharedMem
      type(c_ptr),value,intent(in) :: stream
    end subroutine

    subroutine launch_krnl_e7eb26_15(grid,&
        block,&
        sharedMem,&
        stream) bind(c, name="launch_krnl_e7eb26_15")
      use iso_c_binding
      use hipfort
      use hipfort_check
      implicit none
      type(dim3),intent(in) :: grid
      type(dim3),intent(in) :: block
      integer(c_int),intent(in) :: sharedMem
      type(c_ptr),value,intent(in) :: stream
    end subroutine

    subroutine launch_krnl_e7eb26_15_auto(sharedMem,&
        stream) bind(c, name="launch_krnl_e7eb26_15_auto")
      use iso_c_binding
      use hipfort
      use hipfort_check
      implicit none
      integer(c_int),value,intent(in) :: sharedMem
      type(c_ptr),value,intent(in) :: stream
    end subroutine

  end interface

  contains

    subroutine launch_krnl_cecba2_8_cpu(sharedMem,&
        stream)
      use iso_c_binding
      use hipfort
      use hipfort_check
      implicit none
      integer(c_int),value,intent(in) :: sharedMem
      type(c_ptr),value,intent(in) :: stream
        !$acc parallel loop
        do i = 1, N
          x(i) = 1
          y(i) = 2
        end do

    end subroutine

    subroutine launch_krnl_e7eb26_15_cpu(sharedMem,&
        stream)
      use iso_c_binding
      use hipfort
      use hipfort_check
      implicit none
      integer(c_int),value,intent(in) :: sharedMem
      type(c_ptr),value,intent(in) :: stream
        !$acc parallel loop reduction(+:res)
        do i = 1, N
          res = res + x(i) * y(i)
        end do

    end subroutine


end module vector_dot_kernels