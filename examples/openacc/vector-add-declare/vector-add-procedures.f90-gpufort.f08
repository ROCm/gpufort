#ifdef _GPUFORT
! This file was generated by GPUFORT
#endif
! SPDX-License-Identifier: MIT
! Copyright (c) 2020-2022 Advanced Micro Devices, Inc. All rights reserved.
program main
  ! begin of program
      
  implicit none
  integer, parameter :: N = 1000
  integer :: i,j
  integer(4) :: x(N,N), y(N,N), y_exact(N)

  y_exact = 3

  x = 1
  y = 2
  
  call vector_add_gpu(x(1:,3),y(1:,3),.FALSE.)
  call vector_add_gpu(x(1:,3),y(1:,3),.TRUE.) ! return prematurely; do not perform addition
 
  do i = 1, N
    if ( y_exact(i) .ne.&
            y(i,3) ) ERROR STOP "GPU and CPU result do not match"
  end do

  print *, "PASSED"

contains

subroutine vector_add_gpu(x,y,return_prematurely)
#ifdef _GPUFORT
  use gpufort_acc_runtime
  use iso_c_binding
  integer(4) :: x(:), y(:)
  logical    :: return_prematurely
  type(c_ptr) :: dev_x_i_
  type(c_ptr) :: dev_y_i_
  type(c_ptr) :: dev_y
  type(c_ptr) :: dev_x
  call gpufort_acc_enter_region(implicit_region=.true.)
  dev_x = gpufort_acc_present(x,or=gpufort_acc_event_copyin)
  dev_y = gpufort_acc_present(y,or=gpufort_acc_event_copyin)
#else
  integer(4) :: x(:), y(:)
  logical    :: return_prematurely
#endif
  !$acc declare copyin(x,y)
  
  ! extra return statement
#ifdef _GPUFORT
if ( return_prematurely ) then
  call gpufort_acc_exit_region(implicit_region=.true.)
  return
endif
  
  call gpufort_acc_enter_region()
  dev_y_i_ = gpufort_acc_present(y(i),or=gpufort_acc_event_copy)
  dev_x_i_ = gpufort_acc_present(x(i),or=gpufort_acc_event_copy)
  ! extracted to HIP C++ file
  call launch_vector_add_gpu_36_auto(0,c_null_ptr,)
  call gpufort_acc_wait()
  call gpufort_acc_exit_region()
  
  call gpufort_acc_update_host(y)
call gpufort_acc_exit_region(implicit_region=.true.)
end subroutine
#else
  if ( return_prematurely ) return
  
  !$acc parallel loop
  do i = 1, N
    y(i) = x(i) + y(i)
  end do
  
  !$acc update host(y)
end subroutine
#endif

end program