// This file was generated by GPUFORT

#ifndef VECTOR_DOT_F90_GPUFORT_CPP
#define VECTOR_DOT_F90_GPUFORT_CPP

// BEGIN main_11 293423

/**
   HIP C++ implementation of the function/loop body of:

     !$acc parallel loop
     do i = 1, N
       x(i) = 1
       y(i) = 2
     end do

*/

__global__ void  main_11(
    gpufort::array1<int> x,
    gpufort::array1<int> y,
    int n
){
  int i = 1 + (1)*(threadIdx.x + blockIdx.x * blockDim.x);
  if (loop_cond(i,n,1)) {
    x(i)=1;
    y(i)=2;
  }
}

// END main_11 293423

// BEGIN main_18 9ec933

/**
   HIP C++ implementation of the function/loop body of:

     !$acc parallel loop reduction(+:res)
     do i = 1, N
       res = res + x(i) * y(i)
     end do

*/

__global__ void  main_18(
    gpufort::array1<int> x,
    gpufort::array1<int> y,
    int n,
    gpufort::array1<int> res
){
  int i = 1 + (1)*(threadIdx.x + blockIdx.x * blockDim.x);
  reduce_op_add::init(res[__gidx1]);
  if (loop_cond(i,n,1)) {
    res[__gidx1]=(res[__gidx1]+x(i)*y(i));
  }
}

// END main_18 9ec933

// BEGIN main_11 293423

extern "C" hipError_t launch_main_11_hip_(
    dim3& grid,
    dim3& block,
    const int& sharedmem,
    hipStream_t& stream,
    gpufort::array1<int>& x,
    gpufort::array1<int>& y,
    int& n) {
  hipError_t ierr = hipSuccess;
  hipLaunchKernelGGL((main_11), grid, block, sharedmem, stream, x,y,n);
  #if defined(SYNCHRONIZE_ALL) || defined(SYNCHRONIZE_main_11)
  HIP_CHECK(hipStreamSynchronize(stream));
  #elif defined(SYNCHRONIZE_DEVICE_ALL) || defined(SYNCHRONIZE_DEVICE_main_11)
  HIP_CHECK(hipDeviceSynchronize());
  #endif
  ierr = hipGetLastError();	
  if ( ierr != hipSuccess ) return ierr;
  return ierr;
}

extern "C" hipError_t launch_main_11_hip_ps_(
    dim3& problem_size,
    dim3& block,
    const int& sharedmem,
    hipStream_t& stream,
    gpufort::array1<int>& x,
    gpufort::array1<int>& y,
    int& n) {
  hipError_t ierr = hipSuccess;
  dim3 grid(divideAndRoundUp(problem_size.x,block.x),
            divideAndRoundUp(problem_size.y,block.y),
            divideAndRoundUp(problem_size.z,block.z));   
  hipLaunchKernelGGL((main_11), grid, block, sharedmem, stream, x,y,n);
  #if defined(SYNCHRONIZE_ALL) || defined(SYNCHRONIZE_main_11)
  HIP_CHECK(hipStreamSynchronize(stream));
  #elif defined(SYNCHRONIZE_DEVICE_ALL) || defined(SYNCHRONIZE_DEVICE_main_11)
  HIP_CHECK(hipDeviceSynchronize());
  #endif
  ierr = hipGetLastError();	
  if ( ierr != hipSuccess ) return ierr;
  return ierr;
}

// END main_11 293423

// BEGIN main_18 9ec933

extern "C" hipError_t launch_main_18_hip_(
    dim3& grid,
    dim3& block,
    const int& sharedmem,
    hipStream_t& stream,
    gpufort::array1<int>& x,
    gpufort::array1<int>& y,
    int& n,
    int& res) {
  hipError_t ierr = hipSuccess;
  gpufort::array<int> res_buf;
  res_buf.init(sizeof(int)/*bytes per element*/,nullptr/*hostptr*/,nullptr/*deviceptr*/,
    __total_threads(grid,block)/*#elements*/,0/*lower bound*/,AllocMode::WrapHostAllocDevice);

  hipLaunchKernelGGL((main_18), grid, block, sharedmem, stream, x,y,n,res_buf);
  #if defined(SYNCHRONIZE_ALL) || defined(SYNCHRONIZE_main_18)
  HIP_CHECK(hipStreamSynchronize(stream));
  #elif defined(SYNCHRONIZE_DEVICE_ALL) || defined(SYNCHRONIZE_DEVICE_main_18)
  HIP_CHECK(hipDeviceSynchronize());
  #endif
  ierr = hipGetLastError();	
  if ( ierr != hipSuccess ) return ierr;
  reduce<int, reduce_op_+>(res_buf.data.data_dev,res_buf.data.num_elements, res);
  ierr = res_buf.destroy();
  if ( ierr != hipSuccess ) return ierr;
  return ierr;
}

extern "C" hipError_t launch_main_18_hip_ps_(
    dim3& problem_size,
    dim3& block,
    const int& sharedmem,
    hipStream_t& stream,
    gpufort::array1<int>& x,
    gpufort::array1<int>& y,
    int& n,
    int& res) {
  hipError_t ierr = hipSuccess;
  dim3 grid(divideAndRoundUp(problem_size.x,block.x),
            divideAndRoundUp(problem_size.y,block.y),
            divideAndRoundUp(problem_size.z,block.z));   
  gpufort::array<int> res_buf;
  res_buf.init(sizeof(int)/*bytes per element*/,nullptr/*hostptr*/,nullptr/*deviceptr*/,
    __total_threads(grid,block)/*#elements*/,0/*lower bound*/,AllocMode::WrapHostAllocDevice);

  hipLaunchKernelGGL((main_18), grid, block, sharedmem, stream, x,y,n,res_buf);
  #if defined(SYNCHRONIZE_ALL) || defined(SYNCHRONIZE_main_18)
  HIP_CHECK(hipStreamSynchronize(stream));
  #elif defined(SYNCHRONIZE_DEVICE_ALL) || defined(SYNCHRONIZE_DEVICE_main_18)
  HIP_CHECK(hipDeviceSynchronize());
  #endif
  ierr = hipGetLastError();	
  if ( ierr != hipSuccess ) return ierr;
  reduce<int, reduce_op_+>(res_buf.data.data_dev,res_buf.data.num_elements, res);
  ierr = res_buf.destroy();
  if ( ierr != hipSuccess ) return ierr;
  return ierr;
}

// END main_18 9ec933
#endif // VECTOR_DOT_F90_GPUFORT_CPP