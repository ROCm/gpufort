#ifdef _GPUFORT
! This file was generated by GPUFORT
#endif
! SPDX-License-Identifier: MIT
! Copyright (c) 2020-2022 Advanced Micro Devices, Inc. All rights reserved.
program main
#ifdef _GPUFORT
  use gpufort_acc_runtime
  use iso_c_binding
#endif
  implicit none
  integer, parameter :: N = 20
  integer :: i
#ifdef _GPUFORT
  integer(4) :: x(N), y(N), res
  type(c_ptr) :: dev_y_i_
  type(c_ptr) :: dev_x_i_
  type(c_ptr) :: dev_y
  type(c_ptr) :: dev_x

  call gpufort_acc_enter_region()
  dev_x = gpufort_acc_copy(x(1:N))
  dev_y = gpufort_acc_copy(y(1:N))
  
  call gpufort_acc_enter_region()
  dev_x_i_ = gpufort_acc_present(x(i),or=gpufort_acc_event_copy)
  dev_y_i_ = gpufort_acc_present(y(i),or=gpufort_acc_event_copy)
  ! extracted to HIP C++ file
  call launch_main_11_auto(0,c_null_ptr,)
  call gpufort_acc_wait()
  call gpufort_acc_exit_region()
#else
  integer(4) :: x(N), y(N), res

  !$acc data copy(x(1:N),y(1:N))
  
  !$acc parallel loop
  do i = 1, N
    x(i) = 1
    y(i) = 2
  end do
#endif

  res = 0
#ifdef _GPUFORT
  call gpufort_acc_enter_region()
  dev_x_i_ = gpufort_acc_present(x(i),or=gpufort_acc_event_copy)
  dev_y_i_ = gpufort_acc_present(y(i),or=gpufort_acc_event_copy)
  ! extracted to HIP C++ file
  call launch_main_18_auto(0,c_null_ptr,)
  call gpufort_acc_wait()
  call gpufort_acc_exit_region()
  
  call gpufort_acc_exit_region()
#else
  !$acc parallel loop reduction(+:res)
  do i = 1, N
    res = res + x(i) * y(i)
  end do
  
  !$acc end data
#endif

  if ( res .ne. N*2 ) ERROR STOP "FAILED"
  PRINT *, "PASSED"

end program