# SPDX-License-Identifier: MIT
# Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
import os
import copy
import logging

import addtoplevelpath
import translator.translator as translator
import indexer.indexer as indexer
import indexer.scoper as scoper
import scanner.scanner as scanner
import utils.logging
import utils.fileutils

fort2hip_dir = os.path.dirname(__file__)
exec(open(os.path.join(fort2hip_dir,"fort2hip_options.py.in")).read())

class HipCodeGenerator(CodeGenerator):
    def _fort2x_module_name(self,
                            stnode):
        """Name of module file generated by fort2x for module/program/procedure.
        """
        return "{}{}".format(stnode.tag().replace(":","_"))
    def _render_loop_kernel(self,
                            stkernel,
                            cppfilegen,
                            f03filegen):
        utils.logging.log_enter_function(LOG_PREFIX,"self.__render_loop_kernel")
    
        ttloopkernel = stkernel.parse_result
        scope        = scoper.create_scope(stkernel._parent.tag())
        
        #print(self.ttloopnest.c_str())
        self.kernelgen = fort2x.hip.kernelgen_hip.HipKernelGenerator4LoopNest(stkernel.kernel_name(),
                                                                              stkernel.kernel_hash(),
                                                                              ttloopnest,
                                                                              scope,
                                                                              "\n".join(fortran_statements))
    
        hip_context["have_reductions"] = False # |= len(reduction_ops)
    
    def _render_device_procedure(stnode,
                                 index,
                                 current_cppfilegen,
                                 current_f03filegen):
        pass
