# SPDX-License-Identifier: MIT                                                
# Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
# Defaults
def GET_DEFAULT_BLOCK_DIMS(kernel_name,dim):
    block_dims = { 1 : [128], 2 : [128,1,1], 3: [128,1,1] }
    return block_dims[dim]

def GET_DEFAULT_LAUNCH_BOUNDS(kernel_name):
    return None
# OPTIONS
LOG_PREFIX = "fort2x.hip.fort2hip"
        # Prefix for log output that this component writes.

GET_BLOCK_DIMS    = GET_DEFAULT_BLOCK_DIMS
        # Callback to provide default block dimensions for a given kernel.
        # callback arguments: kernel_name,filepath,lineno,dim
        # return: list of int with dim entries

GET_LAUNCH_BOUNDS = GET_DEFAULT_LAUNCH_BOUNDS 
        # Callback to provide 'MAX_THREADS_PER_BLOCK, MIN_BLOCKS_PER_MP' for a given kernel.
        # callback arguments: kernel_name,filepath,lineno
        # return: a string consisting of two comma-separated integer numbers, e.g. '128,1' or '256, 4'
 
EMIT_KERNEL_LAUNCHER     = True  
        # Generate kernel launch routines that are callable from Fortran.
        # Set to 'False' in order to categorically disable generation of kernel launch routines.
EMIT_CPU_IMPLEMENTATION  = False 
        # Generate CPU kernel launch routines from Fortran loopnests. (EMIT_KERNEL_LAUNCHER must be set to True too.)
EMIT_DEBUG_CODE          = False 
        # Generate debug routine calls into the code that can be used 
        # to print out kernel argument values or device array elements and norms.
