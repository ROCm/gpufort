# autogenerated file
def render_hip_device_routine_comment_cpp_ctx(context):
    return generate_code("render_hip_device_routine_comment.template.cpp",context)
    
def render_hip_device_routine_comment_cpp(fortran_snippet):
    context = {
      "fortran_snippet" : fortran_snippet
      }
    return render_hip_device_routine_comment_cpp_ctx(context)
    
def render_hip_device_routine_cpp_ctx(context):
    return generate_code("render_hip_device_routine.template.cpp",context)
    
def render_hip_device_routine_cpp(routine):
    context = {
      "routine" : routine
      }
    return render_hip_device_routine_cpp_ctx(context)
    
def render_hip_launcher_cpp_ctx(context):
    return generate_code("render_hip_launcher.template.cpp",context)
    
def render_hip_launcher_cpp(kernel,launcher):
    context = {
      "kernel" : kernel,
      "launcher" : launcher
      }
    return render_hip_launcher_cpp_ctx(context)
    
def render_cpu_routine_cpp_ctx(context):
    return generate_code("render_cpu_routine.template.cpp",context)
    
def render_cpu_routine_cpp(kernel):
    context = {
      "kernel" : kernel
      }
    return render_cpu_routine_cpp_ctx(context)
    
def render_cpu_launcher_cpp_ctx(context):
    return generate_code("render_cpu_launcher.template.cpp",context)
    
def render_cpu_launcher_cpp(kernel,launcher):
    context = {
      "kernel" : kernel,
      "launcher" : launcher
      }
    return render_cpu_launcher_cpp_ctx(context)
    
def render_launcher_f03_ctx(context):
    return generate_code("render_launcher.template.f03",context)
    
def render_launcher_f03(kernel,launcher):
    context = {
      "kernel" : kernel,
      "launcher" : launcher
      }
    return render_launcher_f03_ctx(context)
    
def render_cpu_routine_f03_ctx(context):
    return generate_code("render_cpu_routine.template.f03",context)
    
def render_cpu_routine_f03(kernel,launcher,fortran_snippet):
    context = {
      "kernel" : kernel,
      "launcher" : launcher,
      "fortran_snippet" : fortran_snippet
      }
    return render_cpu_routine_f03_ctx(context)
    