# SPDX-License-Identifier: MIT                                                
# Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.

class CufLoopKernel2Omp(CufBackendBase):
    def transform(self,joined_lines,joined_statements,statements_fully_cover_lines,index_hints=[]):
        """
        Analyze based on statements but modify original lines if these are
        fully covered by the statements.
        """
        global LOG_PREFIX
        try:
           parent_tag   = self._stnode._parent.tag()
           scope        = scoper.create_scope(index_hints,parent_tag)
           parse_result = translator.parse_loop_kernel(joined_statements.split("\n"),scope)
           f_snippet    = joined_lines if statements_fully_cover_lines else joined_statements
           return parse_result.omp_f_str(f_snippet), True 
        except Exception as e:
            utils.logging.log_exception(LOG_PREFIX,"CufLoopKernel2Omp.transform","failed to parse loop kernel")
            sys.exit(2) # TODO error code

register_cuf_backend("omp",CufLoopKernel2Omp,None)