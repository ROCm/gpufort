# SPDX-License-Identifier: MIT                                                
# Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
class Acc2Omp(AccBackendBase):
    def transform(self,joined_lines,joined_statements,statements_fully_cover_lines,index=[]):
        global LOG_PREFIX
        
        snippet = joined_statements
        try:
           def repl(parse_result):
                return parse_result.omp_f_str(), True
           result,_ = utils.pyparsingutils.replace_first(snippet,\
                    translator.acc_simple_directive,\
                    repl)
           return result, True 
        except Exception as e:
           utils.logging.log_exception(LOG_PREFIX,"Acc2Omp.transform","failed parse directive "+str(snippet))

class AccLoopKernel2Omp(AccBackendBase):
    def transform(self,joined_lines,joined_statements,statements_fully_cover_lines,index=[]):
        global LOG_PREFIX
        
        if statements_fully_cover_lines:
            snippet = joined_lines
        else:
            snippet = joined_statements
        try:
           parent_tag   = self._stnode._parent.tag()
           scope        = scoper.create_scope(index,parent_tag)
           parse_result = translator.parse_loop_kernel(snippet.split("\n"),scope)
           return parse_result.omp_f_str(snippet), True 
        except Exception as e:
           utils.logging.log_exception(LOG_PREFIX,"AccLoopKernel2Omp.transform","failed to convert kernel "+str(snippet))
           sys.exit(2)

register_acc_backend("omp",Acc2Omp,AccLoopKernel2Omp,AccPostprocessBackendBase,None)
